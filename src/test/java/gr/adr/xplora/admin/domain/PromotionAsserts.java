package gr.adr.xplora.admin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PromotionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPromotionAllPropertiesEquals(Promotion expected, Promotion actual) {
        assertPromotionAutoGeneratedPropertiesEquals(expected, actual);
        assertPromotionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPromotionAllUpdatablePropertiesEquals(Promotion expected, Promotion actual) {
        assertPromotionUpdatableFieldsEquals(expected, actual);
        assertPromotionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPromotionAutoGeneratedPropertiesEquals(Promotion expected, Promotion actual) {
        assertThat(expected)
            .as("Verify Promotion auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPromotionUpdatableFieldsEquals(Promotion expected, Promotion actual) {
        assertThat(expected)
            .as("Verify Promotion relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getEnabled()).as("check enabled").isEqualTo(actual.getEnabled()))
            .satisfies(e -> assertThat(e.getDiscount()).as("check discount").isEqualTo(actual.getDiscount()))
            .satisfies(e -> assertThat(e.getFromDate()).as("check fromDate").isEqualTo(actual.getFromDate()))
            .satisfies(e -> assertThat(e.getToDate()).as("check toDate").isEqualTo(actual.getToDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPromotionUpdatableRelationshipsEquals(Promotion expected, Promotion actual) {
        assertThat(expected)
            .as("Verify Promotion relationships")
            .satisfies(e -> assertThat(e.getTours()).as("check tours").isEqualTo(actual.getTours()));
    }
}
