package gr.adr.xplora.admin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WebPageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebPageAllPropertiesEquals(WebPage expected, WebPage actual) {
        assertWebPageAutoGeneratedPropertiesEquals(expected, actual);
        assertWebPageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebPageAllUpdatablePropertiesEquals(WebPage expected, WebPage actual) {
        assertWebPageUpdatableFieldsEquals(expected, actual);
        assertWebPageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebPageAutoGeneratedPropertiesEquals(WebPage expected, WebPage actual) {
        assertThat(expected)
            .as("Verify WebPage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebPageUpdatableFieldsEquals(WebPage expected, WebPage actual) {
        assertThat(expected)
            .as("Verify WebPage relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getUriPath()).as("check uriPath").isEqualTo(actual.getUriPath()))
            .satisfies(e -> assertThat(e.getEnabled()).as("check enabled").isEqualTo(actual.getEnabled()))
            .satisfies(e -> assertThat(e.getPublishDate()).as("check publishDate").isEqualTo(actual.getPublishDate()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebPageUpdatableRelationshipsEquals(WebPage expected, WebPage actual) {
        assertThat(expected)
            .as("Verify WebPage relationships")
            .satisfies(e -> assertThat(e.getTags()).as("check tags").isEqualTo(actual.getTags()));
    }
}
